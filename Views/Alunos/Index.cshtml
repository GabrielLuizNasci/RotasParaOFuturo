




@model IEnumerable<RotasParaOFuturo.Models.Aluno>

@{
    ViewData["Title"] = "Index";
}

<style>
    body {
        background-color: #f8f9fa;
    }

    .custom-table {
        background-color: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .custom-table thead th {
        background-color: #007bff;
        color: white;
        text-align: center;
    }

    .custom-table tbody tr:hover {
        background-color: #e9ecef;
        transition: background-color 0.3s;
    }

    .custom-table tbody td {
        vertical-align: middle;
        text-align: center;
    }
</style>

<h1 class="mb-4">Controle de Alunos</h1>

<p>

    <!-- Formulário de pesquisa -->
<form method="get" class="mb-4">
    <div class="d-flex justify-content-start">
        <div class="me-2">
            <input type="text" name="nome" class="form-control" placeholder="Pesquisar por Nome" value="@Context.Request.Query["nome"]" />
        </div>
        <div class="me-2">
            <input type="text" name="cpf" class="form-control" placeholder="Pesquisar por CPF" value="@Context.Request.Query["cpf"]" />
        </div>
        <div class="me-2">
            <input type="number" name="id" class="form-control" placeholder="Pesquisar por ID" value="@Context.Request.Query["id"]" />
        </div>
        <button type="submit" class="btn btn-primary">Buscar</button>
    </div>
</form>
    <a asp-action="Create" class="btn btn-success text-white">
        <i class="bi bi-plus-circle me-2"></i> Criar Novo Aluno
    </a>
</p>

<table class="table custom-table table-striped table-hover table-bordered">
    <thead class="table-light">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Nome)</th>
            <th>@Html.DisplayNameFor(model => model.Nascimento)</th>
            <th>@Html.DisplayNameFor(model => model.Endereco)</th>
            <th>@Html.DisplayNameFor(model => model.CPF)</th>
            <th>@Html.DisplayNameFor(model => model.RG)</th>
            <th>@Html.DisplayNameFor(model => model.Telefone)</th>
            <th>@Html.DisplayNameFor(model => model.Sexo)</th>
            <th class="text-center">Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                            <td>@Html.DisplayFor(modelItem => item.Nascimento)</td>
                            <td>@Html.DisplayFor(modelItem => item.Endereco)</td>
                            <td>@Html.DisplayFor(modelItem => item.CPF)</td> <!-- CPF formatado -->
                            <td>@Html.DisplayFor(modelItem => item.RG)</td> <!-- RG formatado -->
                            <td>@Html.DisplayFor(modelItem => item.Telefone)</td>
                            <td>@Html.DisplayFor(modelItem => item.SexoFormatado)</td>
                            <td class="text-center">
                                <a href="@Url.Action("Edit", "Alunos", new { id = item.Id })" class="btn btn-warning btn-sm" title="Editar">
                                    <i class="bi bi-pencil-square"></i> Editar
                                </a> |
                                <a href="@Url.Action("Details", "Alunos", new { id = item.Id })" class="btn btn-info btn-sm" title="Ver Detalhes">
                                    <i class="bi bi-eye"></i> Detalhes
                                </a> |
                                <a href="@Url.Action("Delete", "Alunos", new { id = item.Id })" class="btn btn-danger btn-sm" title="Excluir">
                                    <i class="bi bi-trash"></i> Excluir
                                </a>
                            </td>
                        </tr>
        }
    </tbody>
</table>



















